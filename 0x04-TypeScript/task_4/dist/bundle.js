!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=3)}([function(e,t){var n,r,o=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});!function(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.getRequirements=function(){return"Here is the list of requirements for Cpp"},t.getAvailableTeacher=function(){var e;return(null===(e=t.teacher)||void 0===e?void 0:e.experienceTeachingC)?"Available Teacher: "+t.teacher.firstName:"No available teacher"},t}return o(t,e),t}(Subject);e.Cpp=t}(r||(r={}))},function(e,t){var n,r,o=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});!function(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.getRequirements=function(){return"Here is the list of requirements for Java"},t.getAvailableTeacher=function(){var e;return(null===(e=t.teacher)||void 0===e?void 0:e.experienceTeachingJava)?"Available Teacher: "+t.teacher.firstName:"No available teacher"},t}return o(t,e),t}(Subject);e.JavaClass=t}(r||(r={}))},function(e,t){var n,r,o=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function r(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)});!function(e){var t=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.getRequirements=function(){return"Here is the list of requirements for React"},t.getAvailableTeacher=function(){var e;return(null===(e=t.teacher)||void 0===e?void 0:e.experienceTeachingReact)?"Available Teacher: "+t.teacher.firstName:"No available teacher"},t}return o(t,e),t}(Subject);e.ReactClass=t}(r||(r={}))},function(e,t,n){"use strict";n.r(t),n.d(t,"cpp",(function(){return i})),n.d(t,"java",(function(){return c})),n.d(t,"react",(function(){return u})),n.d(t,"cTeacher",(function(){return l}));var r=n(0),o=n(1),a=n(2),i=new r.Cpp,c=new o.JavaClass,u=new a.ReactClass,l={firstName:"John",lastName:"Doe",experienceTeachingC:10};console.log("C++"),i.setTeacher(l),console.log(i.getRequirements()),console.log(i.getAvailableTeacher()),console.log("Java"),c.setTeacher(l),console.log(c.getRequirements()),console.log(c.getAvailableTeacher()),console.log("React"),u.setTeacher(l),console.log(u.getRequirements()),console.log(u.getAvailableTeacher())}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vanMvc3ViamVjdHMvQ3BwLnRzIiwid2VicGFjazovLy8uL2pzL3N1YmplY3RzL0phdmEudHMiLCJ3ZWJwYWNrOi8vLy4vanMvc3ViamVjdHMvUmVhY3QudHMiLCJ3ZWJwYWNrOi8vLy4vanMvbWFpbi50cyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsIlN1YmplY3RzIiwiZ2V0UmVxdWlyZW1lbnRzIiwiZ2V0QXZhaWxhYmxlVGVhY2hlciIsInRlYWNoZXIiLCJleHBlcmllbmNlVGVhY2hpbmdDIiwiZmlyc3ROYW1lIiwiU3ViamVjdCIsIkNwcCIsImV4cGVyaWVuY2VUZWFjaGluZ0phdmEiLCJKYXZhQ2xhc3MiLCJleHBlcmllbmNlVGVhY2hpbmdSZWFjdCIsIlJlYWN0Q2xhc3MiLCJjcHAiLCJqYXZhIiwicmVhY3QiLCJjVGVhY2hlciIsImxhc3ROYW1lIiwiY29uc29sZSIsImxvZyIsInNldFRlYWNoZXIiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENB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T0FDWFcsU0FBVSxNQUNWWixvQkFBcUIsSUFJekJhLFFBQVFDLElBQUksT0FDWk4sRUFBSU8sV0FBV0osR0FDZkUsUUFBUUMsSUFBSU4sRUFBSVgsbUJBQ2hCZ0IsUUFBUUMsSUFBSU4sRUFBSVYsdUJBR2hCZSxRQUFRQyxJQUFJLFFBQ1pMLEVBQUtNLFdBQVdKLEdBQ2hCRSxRQUFRQyxJQUFJTCxFQUFLWixtQkFDakJnQixRQUFRQyxJQUFJTCxFQUFLWCx1QkFHakJlLFFBQVFDLElBQUksU0FDWkosRUFBTUssV0FBV0osR0FDakJFLFFBQVFDLElBQUlKLEVBQU1iLG1CQUNsQmdCLFFBQVFDLElBQUlKLEVBQU1aIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5tID0gbW9kdWxlcztcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbiBcdF9fd2VicGFja19yZXF1aXJlX18uYyA9IGluc3RhbGxlZE1vZHVsZXM7XG5cbiBcdC8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb24gZm9yIGhhcm1vbnkgZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kID0gZnVuY3Rpb24oZXhwb3J0cywgbmFtZSwgZ2V0dGVyKSB7XG4gXHRcdGlmKCFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywgbmFtZSkpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgbmFtZSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGdldHRlciB9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRpZih0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiBTeW1ib2wudG9TdHJpbmdUYWcpIHtcbiBcdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgU3ltYm9sLnRvU3RyaW5nVGFnLCB7IHZhbHVlOiAnTW9kdWxlJyB9KTtcbiBcdFx0fVxuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gY3JlYXRlIGEgZmFrZSBuYW1lc3BhY2Ugb2JqZWN0XG4gXHQvLyBtb2RlICYgMTogdmFsdWUgaXMgYSBtb2R1bGUgaWQsIHJlcXVpcmUgaXRcbiBcdC8vIG1vZGUgJiAyOiBtZXJnZSBhbGwgcHJvcGVydGllcyBvZiB2YWx1ZSBpbnRvIHRoZSBuc1xuIFx0Ly8gbW9kZSAmIDQ6IHJldHVybiB2YWx1ZSB3aGVuIGFscmVhZHkgbnMgb2JqZWN0XG4gXHQvLyBtb2RlICYgOHwxOiBiZWhhdmUgbGlrZSByZXF1aXJlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnQgPSBmdW5jdGlvbih2YWx1ZSwgbW9kZSkge1xuIFx0XHRpZihtb2RlICYgMSkgdmFsdWUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKHZhbHVlKTtcbiBcdFx0aWYobW9kZSAmIDgpIHJldHVybiB2YWx1ZTtcbiBcdFx0aWYoKG1vZGUgJiA0KSAmJiB0eXBlb2YgdmFsdWUgPT09ICdvYmplY3QnICYmIHZhbHVlICYmIHZhbHVlLl9fZXNNb2R1bGUpIHJldHVybiB2YWx1ZTtcbiBcdFx0dmFyIG5zID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yKG5zKTtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG5zLCAnZGVmYXVsdCcsIHsgZW51bWVyYWJsZTogdHJ1ZSwgdmFsdWU6IHZhbHVlIH0pO1xuIFx0XHRpZihtb2RlICYgMiAmJiB0eXBlb2YgdmFsdWUgIT0gJ3N0cmluZycpIGZvcih2YXIga2V5IGluIHZhbHVlKSBfX3dlYnBhY2tfcmVxdWlyZV9fLmQobnMsIGtleSwgZnVuY3Rpb24oa2V5KSB7IHJldHVybiB2YWx1ZVtrZXldOyB9LmJpbmQobnVsbCwga2V5KSk7XG4gXHRcdHJldHVybiBucztcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAzKTtcbiIsIi8vLyA8cmVmZXJlbmNlIHBhdGg9XCIuL1RlYWNoZXIudHNcIiAvPlxuLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4vU3ViamVjdC50c1wiIC8+XG5cbm5hbWVzcGFjZSBTdWJqZWN0cyB7XG4gIGV4cG9ydCBjbGFzcyBDcHAgZXh0ZW5kcyBTdWJqZWN0IHtcbiAgICBnZXRSZXF1aXJlbWVudHMgPSAoKSA9PiAnSGVyZSBpcyB0aGUgbGlzdCBvZiByZXF1aXJlbWVudHMgZm9yIENwcCc7XG4gICAgZ2V0QXZhaWxhYmxlVGVhY2hlciA9ICgpID0+IHtcbiAgICAgIGlmICghdGhpcy50ZWFjaGVyPy5leHBlcmllbmNlVGVhY2hpbmdDKSByZXR1cm4gJ05vIGF2YWlsYWJsZSB0ZWFjaGVyJztcbiAgICAgIHJldHVybiBgQXZhaWxhYmxlIFRlYWNoZXI6ICR7dGhpcy50ZWFjaGVyLmZpcnN0TmFtZX1gO1xuICAgIH1cbiAgfVxufVxuIiwiLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4vVGVhY2hlci50c1wiIC8+XG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi9TdWJqZWN0LnRzXCIgLz5cblxubmFtZXNwYWNlIFN1YmplY3RzIHtcbiAgZXhwb3J0IGNsYXNzIEphdmFDbGFzcyBleHRlbmRzIFN1YmplY3Qge1xuICAgIGdldFJlcXVpcmVtZW50cyA9ICgpID0+ICdIZXJlIGlzIHRoZSBsaXN0IG9mIHJlcXVpcmVtZW50cyBmb3IgSmF2YSc7XG4gICAgZ2V0QXZhaWxhYmxlVGVhY2hlciA9ICgpID0+IHtcbiAgICAgIGlmICghdGhpcy50ZWFjaGVyPy5leHBlcmllbmNlVGVhY2hpbmdKYXZhKSByZXR1cm4gJ05vIGF2YWlsYWJsZSB0ZWFjaGVyJztcbiAgICAgIHJldHVybiBgQXZhaWxhYmxlIFRlYWNoZXI6ICR7dGhpcy50ZWFjaGVyLmZpcnN0TmFtZX1gO1xuICAgIH1cbiAgfVxufVxuIiwiLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4vVGVhY2hlci50c1wiIC8+XG4vLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi9TdWJqZWN0LnRzXCIgLz5cblxubmFtZXNwYWNlIFN1YmplY3RzIHtcbiAgZXhwb3J0IGNsYXNzIFJlYWN0Q2xhc3MgZXh0ZW5kcyBTdWJqZWN0IHtcbiAgICBnZXRSZXF1aXJlbWVudHMgPSAoKSA9PiAnSGVyZSBpcyB0aGUgbGlzdCBvZiByZXF1aXJlbWVudHMgZm9yIFJlYWN0JztcbiAgICBnZXRBdmFpbGFibGVUZWFjaGVyID0gKCkgPT4ge1xuICAgICAgaWYgKCF0aGlzLnRlYWNoZXI/LmV4cGVyaWVuY2VUZWFjaGluZ1JlYWN0KSByZXR1cm4gJ05vIGF2YWlsYWJsZSB0ZWFjaGVyJztcbiAgICAgIHJldHVybiBgQXZhaWxhYmxlIFRlYWNoZXI6ICR7dGhpcy50ZWFjaGVyLmZpcnN0TmFtZX1gO1xuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IHsgQ3BwIH0gZnJvbSAnLi9zdWJqZWN0cy9DcHAnO1xuaW1wb3J0IHsgSmF2YUNsYXNzIH0gZnJvbSAnLi9zdWJqZWN0cy9KYXZhJztcbmltcG9ydCB7IFJlYWN0Q2xhc3MgfSBmcm9tICcuL3N1YmplY3RzL1JlYWN0JztcbmltcG9ydCB7IFRlYWNoZXIgfSBmcm9tICcuL3N1YmplY3RzL1RlYWNoZXInO1xuXG4vLyBDcmVhdGUgYW5kIGV4cG9ydCBjb25zdGFudHMgZm9yIENwcCwgSmF2YSwgYW5kIFJlYWN0IHN1YmplY3RzXG5leHBvcnQgY29uc3QgY3BwID0gbmV3IENwcCgpO1xuZXhwb3J0IGNvbnN0IGphdmEgPSBuZXcgSmF2YUNsYXNzKCk7XG5leHBvcnQgY29uc3QgcmVhY3QgPSBuZXcgUmVhY3RDbGFzcygpO1xuXG4vLyBDcmVhdGUgYW5kIGV4cG9ydCBhIFRlYWNoZXIgb2JqZWN0IGNUZWFjaGVyIHdpdGggZXhwZXJpZW5jZVRlYWNoaW5nQyA9IDEwXG5leHBvcnQgY29uc3QgY1RlYWNoZXI6IFRlYWNoZXIgPSB7XG4gICAgZmlyc3ROYW1lOiAnSm9obicsXG4gICAgbGFzdE5hbWU6ICdEb2UnLFxuICAgIGV4cGVyaWVuY2VUZWFjaGluZ0M6IDEwLFxufTtcblxuLy8gRm9yIENwcCBzdWJqZWN0XG5jb25zb2xlLmxvZygnQysrJyk7XG5jcHAuc2V0VGVhY2hlcihjVGVhY2hlcik7XG5jb25zb2xlLmxvZyhjcHAuZ2V0UmVxdWlyZW1lbnRzKCkpO1xuY29uc29sZS5sb2coY3BwLmdldEF2YWlsYWJsZVRlYWNoZXIoKSk7XG5cbi8vIEZvciBKYXZhIHN1YmplY3RcbmNvbnNvbGUubG9nKCdKYXZhJyk7XG5qYXZhLnNldFRlYWNoZXIoY1RlYWNoZXIpO1xuY29uc29sZS5sb2coamF2YS5nZXRSZXF1aXJlbWVudHMoKSk7XG5jb25zb2xlLmxvZyhqYXZhLmdldEF2YWlsYWJsZVRlYWNoZXIoKSk7XG5cbi8vIEZvciBSZWFjdCBzdWJqZWN0XG5jb25zb2xlLmxvZygnUmVhY3QnKTtcbnJlYWN0LnNldFRlYWNoZXIoY1RlYWNoZXIpO1xuY29uc29sZS5sb2cocmVhY3QuZ2V0UmVxdWlyZW1lbnRzKCkpO1xuY29uc29sZS5sb2cocmVhY3QuZ2V0QXZhaWxhYmxlVGVhY2hlcigpKTtcbiJdLCJzb3VyY2VSb290IjoiIn0=